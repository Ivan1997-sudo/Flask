from flask import Flask, render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy

app = Flask(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///database.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db = SQLAlchemy(app)

# –ú–æ–¥–µ–ª—å –∑–∞–¥–∞—á–∏ (—Ç–∞–±–ª–∏—Ü–∞ Task)
class Task(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(10), nullable=False)

    def __repr__(self):
        return f"<Task {self.title}>"

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
with app.app_context():
    db.create_all()

### üìå CRUD-–ú–ê–†–®–†–£–¢–´

# üìå –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
@app.route('/')
@app.route('/tasks')
def get_tasks():
    tasks = Task.query.all()  # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–¥–∞—á–∏ –∏–∑ –±–∞–∑—ã
    return render_template('tasks.html', tasks=tasks)

# üìå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
@app.route('/add', methods=['GET', 'POST'])
def add_task():
    if request.method == 'POST':
        title = request.form['title']
        if title.strip():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –Ω–µ –ø—É—Å—Ç–∞—è
            new_task = Task(title=title)
            db.session.add(new_task)
            db.session.commit()
        return redirect(url_for('get_tasks'))
    return render_template('add_task.html')

# üìå –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
@app.route('/edit/<int:id>', methods=['GET', 'POST'])
def edit_task(id):
    task = Task.query.get_or_404(id)  # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á—É –ø–æ ID
    if request.method == 'POST':
        new_title = request.form['title']
        if new_title.strip():
            task.title = new_title
            db.session.commit()
        return redirect(url_for('get_tasks'))
    return render_template('edit_task.html', task=task)

# üìå –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
@app.route('/delete/<int:id>')
def delete_task(id):
    task = Task.query.get_or_404(id)  # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á—É –ø–æ ID
    db.session.delete(task)  # –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã
    db.session.commit()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    return redirect(url_for('get_tasks'))

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    app.run(debug=True)